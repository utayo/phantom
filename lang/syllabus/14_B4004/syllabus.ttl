@prefix sylbank: <http://example.com/syllabus:> .
@prefix lect: <http://example.com/lecture_vocabulary:> .

	lect:lecture_id"14_B4004";
	sylb:summary "クラスという概念を使ってプログラムを部品としてまとめ、その部品の動作を組み合わせることがオブジェクト指向プログラミング（OOP:Object Oriented Programming）です。プログラムは「クラス」という概念を使わずに書くこともできますが、プログラムを書く際に自分が分かりやすく・他人に読んでもらいやすくするために「クラス」を使ってプログラムを書きます。 オブジェクト指向プログラミングをマスターすると、他の人が作ってくれた部品：クラスを組み合わせて、便利なプログラムをさっと作ったり、大きなプログラムを一人で作ることができるようになります。

この授業では、OOPに必要な概念の勉強と実際にプログラムを書く練習を繰り返し、OOPを習得します。 OOPは様々な言語で使われているプログラミングの方法ですが、この授業ではJava言語のサブセットであるProcessingを使ってOOPを習得します。 後半にはEclipseを使ってJavaのプログラムからProcessingのクラスを呼び出し、より本格的なプログラミングへと発展させます。

";
	sylb:method "各自のノートパソコンに統合開発環境であるProcessingとEclipseをインストールし、概念の講義とプログラミングの実習を行います。適時、授業で課題を出します。

";
	sylb:schedule "第1回 はじめに
開発環境の準備 
演習（関数の復習）

第2回 クラス#1
クラスとインスタンス

第3回 クラス#2
クラスの宣言、変数、コンストラクタ、メソッド

第4回 シンセシス#1
クラスを設計する演習

第5回 クラス#4
継承：スーパークラスとサブクラス

第6回 クラス#5
カプセル化とポリモーフィズム

第7回 クラス#6
メソッドのオーバーロードとオーバーライド

第8回 インタフェース
インタフェースによるポリモーフィズム

第9回 シンセシス#2
クラスを組み合わせる例の紹介および演習

第10回 クラスの利用#1
Javaのライブラリを利用する 
配列、リスト、マップ

第11回 クラスの利用#2
Processingのライブラリを利用する

第12回 クラスの利用#3
JavaからProcessingを利用する

第13回 シンセシス#3
クラスを組み合わせる例の紹介および演習

第14回 まとめ
まとめおよび最終課題の演習

その他
課題

";
	lect:lecture_id"14_B4004";
	sylb:summary "この授業ではJava 言語を使ってオブジェクト指向プログラミングを学びます。Java 言 語は比較的新しいプログラミング言語で、純粋なオブジェクト指向プログラミング言語で す。つまり、「クラス」という概念を使わないとプログラムが書けません。クラスとは、 プログラムを構成する部品を記述する単位のことです。一方で、C++ やObjective-C、 PHP など「クラス」を使っても使わなくてもプログラムが書ける言語はたくさんありま す。が、使っても使わなくても良いというのは思考の幅が広がってしまい、実はやっかい なことなのです。その点、Java 言語はシンプルです。 Java 言語を学ぶと何がうれしいのでしょうか。まず、Android ベースのスマートフォ ン用のプログラムが書けるようになります。自作プログラムをどんどん作って小金を稼ぎ ましょう。次に、Java 言語の基本部分はシンプルなので、オブジェクト指向の考え方に 集中して学習できます。Java 言語を題材として一度オブジェクト指向の考え方を学んで しまえば、他のオブジェクト指向プログラミング言語でも簡単に使うことができます。

";
	sylb:method "各自のノートパソコンに統合開発環境Eclipseをインストールして、実習形式で授業を進めます。毎回の授業で課題を出しますので、翌週の授業までに各自完了させてください。学期中に数回ミニテストを実施する予定です。

";
	sylb:schedule "第1回 はじめに
開発環境の準備、授業の概要紹介

第2回 クラスを使う
クラスライブラリ、クラスとインスタンス、クラスとメソッド

第3回 クラスを作る
クラスの宣言、変数、コンストラクタ、メソッド

第4回 クラスのデザイン
カプセル化、メソッドのオーバーロード

第5回 インタフェース
インタフェースとは

第6回 クラスの継承
スーパークラスとサブクラス、抽象クラス

第7回 ミニプロジェクト準備
グループ分け、テーマ決め

第8回 システムのデザイン
Uniform Modeling Language

第9回 データ構造
配列、リスト、マップ

第10回 入出力
バイナリデータの入出力、文字列の入出力

第11回 デザインパターン
生成に関するパターン

第12回 平行処理
スレッドの使い方

第13回 GUI
イベント処理、ウィジェット

第14回 ミニプロジェクト発表会
その他
課題

";
